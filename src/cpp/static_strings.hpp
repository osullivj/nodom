#pragma once

// Python consts
// TODO: move into statics.hpp which should be
// included in main<>.cpp so expanded template
// NDContext can use
static const char* on_data_change_cs("on_data_change");
static const char* is_duck_app_cs("is_duck_app");
static const char* data_change_cs("DataChange");
static const char* data_change_confirmed_cs("DataChangeConfirmed");
static const char* new_value_cs("new_value");
static const char* old_value_cs("old_value");
static const char* cache_key_cs("cache_key");
static const char* nd_type_cs("nd_type");
static const char* query_id_cs("query_id");
static const char* __nodom__cs("__nodom__");
static const char* sys_cs("sys");
static const char* sql_cs("sql");
static const char* cspec_cs("cspec");
static const char* cname_cs("cname");
static const char* title_cs("title");
static const char* text_cs("text");
static const char* table_flags_cs("table_flags");
static const char* combo_flags_cs("combo_flags");
static const char* window_flags_cs("window_flags");
static const char* child_flags_cs("child_flags");
static const char* path_cs("path");
static const char* service_cs("service");
static const char* breadboard_cs("breadboard");
static const char* duck_module_cs("duck_module");
static const char* empty_cs("");
static const char* nodom_cs("NoDOM");
static const char* font_cs("font");
static const char* font_size_base_cs("font_size_base");
static const char* title_font_cs("title_font");
static const char* title_font_size_base_cs("title_font_size_base");
static const char* body_font_cs("body_font");
static const char* body_font_size_base_cs("body_font_size_base");
static const char* button_font_cs("button_font");
static const char* button_font_size_base_cs("button_font_size_base");
static const char* year_month_font_cs("year_month_font");
static const char* year_month_font_size_base_cs("year_month_font_size_base");
static const char* day_date_font_cs("day_date_font");
static const char* day_date_font_size_base_cs("day_date_font_size_base");
static const char* spinner_radius_cs("spinner_radius");
static const char* size_cs("size");
static const char* spinner_thickness_cs("spinner_thickness");
static const char* cache_response_cs("CacheResponse");
static const char* cache_request_cs("CacheRequest");
static const char* layout_cs("layout");
static const char* data_cs("data");
static const char* value_cs("value");
static const char* parquet_scan_cs("ParquetScan");
static const char* query_cs("Query");
static const char* parquet_scan_result_cs("ParquetScanResult");
static const char* query_result_cs("QueryResult");
static const char* error_cs("Error");
static const char* chunk_cs("Chunk");
static const char* ok_cs("OK");
static const char* cancel_cs("Cancel");
static const char* duck_table_summary_modal_cs("DuckTableSummaryModal");
static const char* duck_instance_cs("DuckInstance");
static const char* null_cs("NULL");
